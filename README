This is a port to NDS of my 3d platformer engine, "clown3d".
The development environment used is the devKitPro toolchain
and libnds (both available at http://devkitpro.org).

Thanks Dovoto for the useful example code and mtheall for the tech
support.

-------------------------------------------------------------------

 * Currently only the "maze" world successfully loads on the
   real console. I'm going to try to fix the default world so
   it also loads.

-------------------------------------------------------------------

- The compiled ROM file is included here; it's "clown3d-DS.nds".
- All the game data and code is stored within the .nds file, no other
  files are needed to run the game. There is no DLDI, so DLDI patching
  is not necessary.
- Screenshot: "wip-screenshot.PNG".

The game controls are:
	A button	jumping
	B button	shooting bullets
	D-pad		movement

-------------------------------------------------------------------

DEVELOPMENT NOTES

 * The code doesn't seem to build OK with devKitARM r38.
   It does however build right with devKitARM r37.
   With devKitARM >= 38 it might be necessary to tweak the
   Makefile (remove "no-fpu").

The source here was forked from the November 12, 2011 snapshot of 
clown3d.

The first phase of porting involved decreasing the
vertex count of all the models to make them "fit" on
the DS' limited GPU; I also made sure the engine's RAM
usage didn't exceed the DS' limit (4 MB, I think).
Finally, I had to store model files as char[]'s in source
files (could have been header files, more typical) and
implement a reader (string-read.c) because
you don't usually have a filesystem available on NDS.
(i.e. model data is stored directly as text in the game ROM.
the data-source directory contains the low-poly model files,
which are "compiled" to model-data.c via the "data2src"
script/program).

I then copy-pasted libnds 3D example code by Dovoto to
start porting to the libnds pseudo-GL API (and DS buttons,
timing, etc.)

Following that, several quirks in libnds had to be worked
around.

                           ----

Note that the current clown3D-ds can still be built for the
PC using either Makefile.pc or mingw-build.bat; to build the
libnds version use Makefile. The PC build shows a vertex count
and (optionally, see main.c) a RAM usage estimation.


